name: Node.js CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: 'server'

    strategy:
      matrix:
        node-version: [16.x]
        # node-version: [12.x, 14.x, 16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    
    env:
      DB_DATABASE: test_db_swap
      DB_USER: root
      DB_PASSWORD: root

    steps:
    - name: Repository checkout
      uses: actions/checkout@v3

    - name: Check directory structure
      run: ls

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: server/package-lock.json
    # each command run from default folder, changing folder with 'cd' command relevant only during execution of this step 
    # - run: cd server && ls

    - name: Print MySql version
      run: mysql --version
    
    - name: Run MySql command (it is unnecessary command, but shows mysql command execution works successfully)
      run: |
        sudo /etc/init.d/mysql start
        mysql -e 'CREATE DATABASE ${{env.DB_DATABASE}};' -u${{env.DB_USER}} -p${{env.DB_PASSWORD}}
        
    - name: Create client user
      run: |
        mysql -e "CREATE USER 'CI_client'@'%' IDENTIFIED WITH mysql_native_password BY 'password';" -u${{env.DB_USER}} -p${{env.DB_PASSWORD}}
        mysql -e "GRANT ALL PRIVILEGES ON *.* TO 'CI_client'@'%';" -u${{env.DB_USER}} -p${{env.DB_PASSWORD}}
        mysql -e "FLUSH PRIVILEGES;" -u${{env.DB_USER}} -p${{env.DB_PASSWORD}}
    # caching_sha2_password seems causes Client does not support authentication protocol requested by server; consider upgrading MySQL client issue  

    - name: Run import command
      run: |
        ls
        mysql -h 127.0.0.1 -u CI_client --password=password test_db_swap < test_db_swap_schema_and_data.sql

    - name: Check directory structure
      run: ls

    - name: Npm check
      run: npm --version

    - name: Run npm ci (CI focused alternative for npm install)
      run: npm ci

    - name: Run npm build
      run: npm run build --if-present
    
    - name: Run jest debug tests
      run: npm run test:debug
      
    - name: Run all jest test suites
      run: npm run test
      
    - name: Zip build reports
      id: zipBuildReports
      if: always()
      run: zip -r build-reports.zip test-report.html
    
    - name: Upload build reports
      if: always() && steps.zipBuildReports.outcome == 'success'
      uses: actions/upload-artifact@v2
      with:
        name: build-reports
        path: server/build-reports.zip
        retention-days: 3